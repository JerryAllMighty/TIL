[서두]
- 이벤트 관련 개발을 진행 중이다. 
이벤트 상세 데이터 테이블이 이벤트 테이블과 부모와 자식 관계이고,
이벤트 상세는 특정 케이스에서 이벤트 상품을 자식으로 가진다.
이벤트 > 이벤트 상세 > 이벤트 상품 순으로 부모와 자식 관계이다.
- 단위 테스트를 하던 도중, 이벤트 상품이 데이터가 적재가 안되는 케이스가 발생했다.
동일한 상품코드라서 데이터가 안 들어가는 케이스였다.
- 일어나면 안되는 케이스다. 상품코드가 키 값, 이벤트 상세 일련번호가 참조값이다.
즉, 각 이벤트들은 당연하게 같은 상품을 이벤트 상품으로 등록 가능하다.
- 원인을 찾아보니, 이벤트 상품 테이블에 이벤트 상세 일련번호가 비식별 관계로 잡혀있었다.
그래서 자식엔티티의 PK에 부모 PK가 포함되지 않아, 상품이 중복이 되지 않는 이슈였다. 
- 그래서 식별 관계, 비식별 관계를 정리해보기로 했다. 

[본론]
- Identifying Relationship (식별 관계)
> 자식 엔티티의 PK(Primary Key)에 부모의 PK가 포함되는 관계
> 즉, 부모 없이는 자식이 존재할 수 없음
> 자식 엔티티의 존재 자체가 부모를 **식별자(Identifier)**로 필요로 함
> 강한 의존성(Strong dependency) 관계

📌 예시:
주문(Orders)과 주문상세(OrderDetails)
주문상세는 반드시 특정 주문에 속해야 함
OrderDetails의 PK = (OrderID, ProductID)
여기서 OrderID는 부모 테이블 Orders의 PK를 포함 → Identifying 관계

2️⃣ Non-identifying Relationship (비식별 관계)
> 자식 엔티티의 PK에는 부모의 PK가 포함되지 않는 관계
> 부모 없이는 자식이 의미는 있지만, 부모의 식별자가 자식의 PK에는 포함되지 않음
> 보통 자식이 독립적인 PK를 가짐
> 부모와의 관계는 외래키 제약으로만 표현됨
> 약한 의존성(Weak dependency) 관계

📌 예시:
고객(Customers)과 주문(Orders)
주문은 특정 고객에 속하지만,
Orders 테이블 PK는 OrderID (독립적인 식별자)
CustomerID는 외래키로만 존재 → Non-identifying 관계

[결론]
- Duplicate Entry Key  에러가 나올 떈, 강결합/약결합도 고려해보면 좋을 것 같다. 
- 설계 미스가 있을 수도 있으니, 식별/비식별 관계를 같이 고민해보자. 
