[서두]
- '레거시 코드 활용 전략' 이라는 책을 읽으며, 현재 프로젝트에 적용할만한 부분은 없을까 고민하고 있었다. 
- 영향 추론이라는 부분이 눈에 들어와 해당 부분을 읽어보며 다음에 적용할 만한 부분은 없는지 살펴보다,
별 것 아닌 것 같은 부분들도 사용할만한 것들이 있을 것 같아 정리를 해놓으려한다.

[본론]
- 저자는 레거시 코드 내의 영향들을 한 눈에 보여주는 IDE가 있으면 좋겠다고 생각했다고 전한다.
> 코드의 특정 부분이 변경이 된다면, 이 코드에 영향을 받는 변수나 메소드의 목록을 보여주는 기능이 있었으면한다. 라고 전한다
> 인텔리제이를 켜서 직접 확인해보았다. '사용 위치 찾기', '분석' 카테고리를 활용하면, 해당하는 위치의 변경 포인트를 쉽게 찾을 수 있다. 

- 영향 스케치
> 영향을 받는 변수와 반환 값이 바뀔 수 있는 메소드를 타원으로 나타내는 것

- 영향 전파
> 만약 한 객체가 다른 객체를 매개변수로 받는다면, 그 객체의 상태를 조용히 변경할 수 있으며, 이 변경이 애플리케이션의 나머지 부분의 조용히 영향을 미치게 된다. 
<C++의 경우는  const 같은 키워드를 사용해 핸들을 못하게 막기도 한다>
> 보통
1. 호출 코드가 사용하는 반환 값
2. 매개변수로 전달된 객체를 변경
3. 정적 또는 전역 변수를 변경
의 3가지 방법으로 코드 내에서의 영향 전파가 이뤄질 수 있다.

[결론]
- 영향을 분석하는 방법 중, 오늘 배워서 적용할만한 부분은
> IDE에서 활용 가능한 기능
> 객체 안의 객체도 확인해야함
> 스케치를 통해 영향을 받는 변수와 메소드를 표현할 수도 있음
정도이다. 

* 전방 추론이나, 영향 추론을 위한 도구는 다루지 않았다. 
