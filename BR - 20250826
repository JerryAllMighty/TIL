[서두]
- 오늘은 룰렛 이벤트 개발을 하는데, 팀장님이 이벤트 참여 관련한 기능 개발은 조금 도와주셨다.
- 문제는, 도와주시는 것은 좋은데, 본인 이해도에 맞춰서 ERD를 전부 수정하시고, 공통으로 필요한 기능은 내가 먼저 만든게 무조건 이상하다고 입맛대로 다 바꿔버리셨다...
- 그래서 일단은 팀장님 코드를 보고 나도 맞춰서 기능을 바꿔야하는데, 문제는 팀장님 코드나 로직이 설명을 2번이나 들어도 이해가 안 갔다
- 다른 업무를 먼저 해결해놓고, 그 10줄 남짓 코드를 이해하는데 하루 종일을 썼다.
- 자괴감이 너무 심했다. 결국 큰 틀은 어느 정도 이해를 했고, 왜 이런 의도로 했는지도 이해를 했다.
- 로직을 분기하는 시점에서 왜 이런 의도인지가 계속 이해가 안 갔는데, 설계서를 한 5번 정도 읽다보니, 조건이 새롭게 눈에 들어오기 시작했고, 설계 의도가 조금씩 이해가 되었다.
- 스스로 답답한 점은, 로직 코드 분석을 조금 더 효율적으로, 빠르게 하고 싶은데, 이런 경우는 내가 아무리 애를 써도 잘 안되는 느낌이라,
매번 이렇게 고생만하나? 정말 정량적으로 좋은 분석 방법은 없을까 생각도 많이 했다
- 그리고 한가지 의문은 팀장님이 짜신 코드가 좋은 코드인데, 내가 부족한건지 (좀 나중에 기획적인 부분의 이해도가 높아지기는 했는데) 그래도 그 판단의 기준이 확실하게 서지 않아서,
이런 부분은 어떻게 채울지도 고민이 되었다. 생각이 이렇게 흘러가다보니 그냥 가스라이팅 당하는건 아닌가...싶었다

[결론]
- 코드 분석을 조금 더 정량적으로 잘 할 수 있는 방법은 없는가?
> SonarQube라는게 있다는 것도 검색해서 알았다.

- 좋은 코드의 기준을 조금씩 알아가야 가스라이팅을 안 당한다...?
(SI는 왜 이렇게 개발 문화가 군대식일까...)
> 클린 코드라는 책을 장바구니에 담았다.
